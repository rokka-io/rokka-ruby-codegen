=begin
#rokka.io

#digital image processing done right. [Documentation](https://rokka.io/documentation). [Changelog](https://api.rokka.io/changelog.md).

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::StacksApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'StacksApi' do
  before do
    # run before each test
    @instance = SwaggerClient::StacksApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of StacksApi' do
    it 'should create an instance of StacksApi' do
      expect(@instance).to be_instance_of(SwaggerClient::StacksApi)
    end
  end

  # unit tests for create_stack
  # Create a new stack.
  # 
  # @param stack_definition Stack operations and options definition. See https://rokka.io/documentation/references/stacks.html for explanations how to define stacks.
  # @param organization 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :overwrite Whether to overwrite the stack if it already exists
  # @return [Stack]
  describe 'create_stack test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_stack
  # Delete a stack.
  # 
  # @param organization 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_stack test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_stack
  # Get a single stack.
  # 
  # @param organization 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @return [Stack]
  describe 'get_stack test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_operations
  # Listing all available operations that can be used in stacks.
  # 
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, StackOperationDescription>]
  describe 'list_operations test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_stack_options
  # List all available options that can be set on stacks.
  # 
  # @param [Hash] opts the optional parameters
  # @return [StackOptions]
  describe 'list_stack_options test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_stacks
  # Get all stacks of an organization.
  # 
  # @param organization 
  # @param [Hash] opts the optional parameters
  # @return [ListStacksResponse]
  describe 'list_stacks test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
